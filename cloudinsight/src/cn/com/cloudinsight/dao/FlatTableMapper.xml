<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.cloudinsight.dao.FlatTableMapper" >
  <resultMap id="BaseResultMap" type="cn.com.cloudinsight.model.FlatTable" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="DATE" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="specification" property="specification" jdbcType="VARCHAR" />
    <result column="coremark" property="coremark" jdbcType="DECIMAL" />
    <result column="scimark_1_composite" property="scimark1Composite" jdbcType="DECIMAL" />
    <result column="scimark_2_composite" property="scimark2Composite" jdbcType="DECIMAL" />
    <result column="scimark_3_composite" property="scimark3Composite" jdbcType="DECIMAL" />
    <result column="scimark_4_composite" property="scimark4Composite" jdbcType="DECIMAL" />
    <result column="hpcc_random100" property="hpccRandom100" jdbcType="DECIMAL" />
    <result column="hpcc_copy" property="hpccCopy" jdbcType="DECIMAL" />
    <result column="hpcc_scale" property="hpccScale" jdbcType="DECIMAL" />
    <result column="hpcc_add" property="hpccAdd" jdbcType="DECIMAL" />
    <result column="hpcc_triad" property="hpccTriad" jdbcType="DECIMAL" />
    <result column="ping_min" property="pingMin" jdbcType="DECIMAL" />
    <result column="ping_average" property="pingAverage" jdbcType="DECIMAL" />
    <result column="ping_max" property="pingMax" jdbcType="DECIMAL" />
    <result column="ping_std" property="pingStd" jdbcType="DECIMAL" />
    <result column="iperf_internal" property="iperfInternal" jdbcType="DECIMAL" />
    <result column="iperf_external" property="iperfExternal" jdbcType="DECIMAL" />
    <result column="netperf_tcp_rr_internal" property="netperfTcpRrInternal" jdbcType="DECIMAL" />
    <result column="netperf_tcp_crr_internal" property="netperfTcpCrrInternal" jdbcType="DECIMAL" />
    <result column="netperf_tcp_stream_internal" property="netperfTcpStreamInternal" jdbcType="DECIMAL" />
    <result column="netperf_udp_rr_internal" property="netperfUdpRrInternal" jdbcType="DECIMAL" />
    <result column="fio_sequential_write_bandwidth" property="fioSequentialWriteBandwidth" jdbcType="DECIMAL" />
    <result column="fio_sequential_read_bandwidth" property="fioSequentialReadBandwidth" jdbcType="DECIMAL" />
    <result column="fio_random_write_bandwidth" property="fioRandomWriteBandwidth" jdbcType="DECIMAL" />
    <result column="fio_random_read_bandwidth" property="fioRandomReadBandwidth" jdbcType="DECIMAL" />
    <result column="fio_sequential_write_latency" property="fioSequentialWriteLatency" jdbcType="DECIMAL" />
    <result column="fio_sequential_read_latency" property="fioSequentialReadLatency" jdbcType="DECIMAL" />
    <result column="fio_random_write_latency" property="fioRandomWriteLatency" jdbcType="DECIMAL" />
    <result column="fio_random_read_latency" property="fioRandomReadLatency" jdbcType="DECIMAL" />
    <result column="fio_sequential_write_iops" property="fioSequentialWriteIops" jdbcType="DECIMAL" />
    <result column="fio_sequential_read_iops" property="fioSequentialReadIops" jdbcType="DECIMAL" />
    <result column="fio_random_write_iops" property="fioRandomWriteIops" jdbcType="DECIMAL" />
    <result column="fio_random_read_iops" property="fioRandomReadIops" jdbcType="DECIMAL" />
    <result column="unixbench_index" property="unixbenchIndex" jdbcType="DECIMAL" />
    <result column="sysbench_oltp" property="sysbenchOltp" jdbcType="DECIMAL" />
    <result column="ycsb_throughput_a" property="ycsbThroughputA" jdbcType="DECIMAL" />
    <result column="ycsb_throughput_b" property="ycsbThroughputB" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, time, name, specification, coremark, scimark_1_composite, scimark_2_composite, 
    scimark_3_composite, scimark_4_composite, hpcc_random100, hpcc_copy, hpcc_scale, 
    hpcc_add, hpcc_triad, ping_min, ping_average, ping_max, ping_std, iperf_internal, 
    iperf_external, netperf_tcp_rr_internal, netperf_tcp_crr_internal, netperf_tcp_stream_internal, 
    netperf_udp_rr_internal, fio_sequential_write_bandwidth, fio_sequential_read_bandwidth, 
    fio_random_write_bandwidth, fio_random_read_bandwidth, fio_sequential_write_latency, 
    fio_sequential_read_latency, fio_random_write_latency, fio_random_read_latency, fio_sequential_write_iops, 
    fio_sequential_read_iops, fio_random_write_iops, fio_random_read_iops, unixbench_index, 
    sysbench_oltp, ycsb_throughput_a, ycsb_throughput_b
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.com.cloudinsight.model.FlatTableExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FlatTable
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from FlatTable
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from FlatTable
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.cloudinsight.model.FlatTableExample" >
    delete from FlatTable
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.cloudinsight.model.FlatTable" >
    insert into FlatTable (id, time, name, 
      specification, coremark, scimark_1_composite, 
      scimark_2_composite, scimark_3_composite, scimark_4_composite, 
      hpcc_random100, hpcc_copy, hpcc_scale, 
      hpcc_add, hpcc_triad, ping_min, 
      ping_average, ping_max, ping_std, 
      iperf_internal, iperf_external, netperf_tcp_rr_internal, 
      netperf_tcp_crr_internal, netperf_tcp_stream_internal, 
      netperf_udp_rr_internal, fio_sequential_write_bandwidth, 
      fio_sequential_read_bandwidth, fio_random_write_bandwidth, 
      fio_random_read_bandwidth, fio_sequential_write_latency, 
      fio_sequential_read_latency, fio_random_write_latency, 
      fio_random_read_latency, fio_sequential_write_iops, 
      fio_sequential_read_iops, fio_random_write_iops, 
      fio_random_read_iops, unixbench_index, sysbench_oltp, 
      ycsb_throughput_a, ycsb_throughput_b)
    values (#{id,jdbcType=INTEGER}, #{time,jdbcType=DATE}, #{name,jdbcType=VARCHAR}, 
      #{specification,jdbcType=VARCHAR}, #{coremark,jdbcType=DECIMAL}, #{scimark1Composite,jdbcType=DECIMAL}, 
      #{scimark2Composite,jdbcType=DECIMAL}, #{scimark3Composite,jdbcType=DECIMAL}, #{scimark4Composite,jdbcType=DECIMAL}, 
      #{hpccRandom100,jdbcType=DECIMAL}, #{hpccCopy,jdbcType=DECIMAL}, #{hpccScale,jdbcType=DECIMAL}, 
      #{hpccAdd,jdbcType=DECIMAL}, #{hpccTriad,jdbcType=DECIMAL}, #{pingMin,jdbcType=DECIMAL}, 
      #{pingAverage,jdbcType=DECIMAL}, #{pingMax,jdbcType=DECIMAL}, #{pingStd,jdbcType=DECIMAL}, 
      #{iperfInternal,jdbcType=DECIMAL}, #{iperfExternal,jdbcType=DECIMAL}, #{netperfTcpRrInternal,jdbcType=DECIMAL}, 
      #{netperfTcpCrrInternal,jdbcType=DECIMAL}, #{netperfTcpStreamInternal,jdbcType=DECIMAL}, 
      #{netperfUdpRrInternal,jdbcType=DECIMAL}, #{fioSequentialWriteBandwidth,jdbcType=DECIMAL}, 
      #{fioSequentialReadBandwidth,jdbcType=DECIMAL}, #{fioRandomWriteBandwidth,jdbcType=DECIMAL}, 
      #{fioRandomReadBandwidth,jdbcType=DECIMAL}, #{fioSequentialWriteLatency,jdbcType=DECIMAL}, 
      #{fioSequentialReadLatency,jdbcType=DECIMAL}, #{fioRandomWriteLatency,jdbcType=DECIMAL}, 
      #{fioRandomReadLatency,jdbcType=DECIMAL}, #{fioSequentialWriteIops,jdbcType=DECIMAL}, 
      #{fioSequentialReadIops,jdbcType=DECIMAL}, #{fioRandomWriteIops,jdbcType=DECIMAL}, 
      #{fioRandomReadIops,jdbcType=DECIMAL}, #{unixbenchIndex,jdbcType=DECIMAL}, #{sysbenchOltp,jdbcType=DECIMAL}, 
      #{ycsbThroughputA,jdbcType=DECIMAL}, #{ycsbThroughputB,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.cloudinsight.model.FlatTable" >
    insert into FlatTable
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="specification != null" >
        specification,
      </if>
      <if test="coremark != null" >
        coremark,
      </if>
      <if test="scimark1Composite != null" >
        scimark_1_composite,
      </if>
      <if test="scimark2Composite != null" >
        scimark_2_composite,
      </if>
      <if test="scimark3Composite != null" >
        scimark_3_composite,
      </if>
      <if test="scimark4Composite != null" >
        scimark_4_composite,
      </if>
      <if test="hpccRandom100 != null" >
        hpcc_random100,
      </if>
      <if test="hpccCopy != null" >
        hpcc_copy,
      </if>
      <if test="hpccScale != null" >
        hpcc_scale,
      </if>
      <if test="hpccAdd != null" >
        hpcc_add,
      </if>
      <if test="hpccTriad != null" >
        hpcc_triad,
      </if>
      <if test="pingMin != null" >
        ping_min,
      </if>
      <if test="pingAverage != null" >
        ping_average,
      </if>
      <if test="pingMax != null" >
        ping_max,
      </if>
      <if test="pingStd != null" >
        ping_std,
      </if>
      <if test="iperfInternal != null" >
        iperf_internal,
      </if>
      <if test="iperfExternal != null" >
        iperf_external,
      </if>
      <if test="netperfTcpRrInternal != null" >
        netperf_tcp_rr_internal,
      </if>
      <if test="netperfTcpCrrInternal != null" >
        netperf_tcp_crr_internal,
      </if>
      <if test="netperfTcpStreamInternal != null" >
        netperf_tcp_stream_internal,
      </if>
      <if test="netperfUdpRrInternal != null" >
        netperf_udp_rr_internal,
      </if>
      <if test="fioSequentialWriteBandwidth != null" >
        fio_sequential_write_bandwidth,
      </if>
      <if test="fioSequentialReadBandwidth != null" >
        fio_sequential_read_bandwidth,
      </if>
      <if test="fioRandomWriteBandwidth != null" >
        fio_random_write_bandwidth,
      </if>
      <if test="fioRandomReadBandwidth != null" >
        fio_random_read_bandwidth,
      </if>
      <if test="fioSequentialWriteLatency != null" >
        fio_sequential_write_latency,
      </if>
      <if test="fioSequentialReadLatency != null" >
        fio_sequential_read_latency,
      </if>
      <if test="fioRandomWriteLatency != null" >
        fio_random_write_latency,
      </if>
      <if test="fioRandomReadLatency != null" >
        fio_random_read_latency,
      </if>
      <if test="fioSequentialWriteIops != null" >
        fio_sequential_write_iops,
      </if>
      <if test="fioSequentialReadIops != null" >
        fio_sequential_read_iops,
      </if>
      <if test="fioRandomWriteIops != null" >
        fio_random_write_iops,
      </if>
      <if test="fioRandomReadIops != null" >
        fio_random_read_iops,
      </if>
      <if test="unixbenchIndex != null" >
        unixbench_index,
      </if>
      <if test="sysbenchOltp != null" >
        sysbench_oltp,
      </if>
      <if test="ycsbThroughputA != null" >
        ycsb_throughput_a,
      </if>
      <if test="ycsbThroughputB != null" >
        ycsb_throughput_b,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        #{time,jdbcType=DATE},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="specification != null" >
        #{specification,jdbcType=VARCHAR},
      </if>
      <if test="coremark != null" >
        #{coremark,jdbcType=DECIMAL},
      </if>
      <if test="scimark1Composite != null" >
        #{scimark1Composite,jdbcType=DECIMAL},
      </if>
      <if test="scimark2Composite != null" >
        #{scimark2Composite,jdbcType=DECIMAL},
      </if>
      <if test="scimark3Composite != null" >
        #{scimark3Composite,jdbcType=DECIMAL},
      </if>
      <if test="scimark4Composite != null" >
        #{scimark4Composite,jdbcType=DECIMAL},
      </if>
      <if test="hpccRandom100 != null" >
        #{hpccRandom100,jdbcType=DECIMAL},
      </if>
      <if test="hpccCopy != null" >
        #{hpccCopy,jdbcType=DECIMAL},
      </if>
      <if test="hpccScale != null" >
        #{hpccScale,jdbcType=DECIMAL},
      </if>
      <if test="hpccAdd != null" >
        #{hpccAdd,jdbcType=DECIMAL},
      </if>
      <if test="hpccTriad != null" >
        #{hpccTriad,jdbcType=DECIMAL},
      </if>
      <if test="pingMin != null" >
        #{pingMin,jdbcType=DECIMAL},
      </if>
      <if test="pingAverage != null" >
        #{pingAverage,jdbcType=DECIMAL},
      </if>
      <if test="pingMax != null" >
        #{pingMax,jdbcType=DECIMAL},
      </if>
      <if test="pingStd != null" >
        #{pingStd,jdbcType=DECIMAL},
      </if>
      <if test="iperfInternal != null" >
        #{iperfInternal,jdbcType=DECIMAL},
      </if>
      <if test="iperfExternal != null" >
        #{iperfExternal,jdbcType=DECIMAL},
      </if>
      <if test="netperfTcpRrInternal != null" >
        #{netperfTcpRrInternal,jdbcType=DECIMAL},
      </if>
      <if test="netperfTcpCrrInternal != null" >
        #{netperfTcpCrrInternal,jdbcType=DECIMAL},
      </if>
      <if test="netperfTcpStreamInternal != null" >
        #{netperfTcpStreamInternal,jdbcType=DECIMAL},
      </if>
      <if test="netperfUdpRrInternal != null" >
        #{netperfUdpRrInternal,jdbcType=DECIMAL},
      </if>
      <if test="fioSequentialWriteBandwidth != null" >
        #{fioSequentialWriteBandwidth,jdbcType=DECIMAL},
      </if>
      <if test="fioSequentialReadBandwidth != null" >
        #{fioSequentialReadBandwidth,jdbcType=DECIMAL},
      </if>
      <if test="fioRandomWriteBandwidth != null" >
        #{fioRandomWriteBandwidth,jdbcType=DECIMAL},
      </if>
      <if test="fioRandomReadBandwidth != null" >
        #{fioRandomReadBandwidth,jdbcType=DECIMAL},
      </if>
      <if test="fioSequentialWriteLatency != null" >
        #{fioSequentialWriteLatency,jdbcType=DECIMAL},
      </if>
      <if test="fioSequentialReadLatency != null" >
        #{fioSequentialReadLatency,jdbcType=DECIMAL},
      </if>
      <if test="fioRandomWriteLatency != null" >
        #{fioRandomWriteLatency,jdbcType=DECIMAL},
      </if>
      <if test="fioRandomReadLatency != null" >
        #{fioRandomReadLatency,jdbcType=DECIMAL},
      </if>
      <if test="fioSequentialWriteIops != null" >
        #{fioSequentialWriteIops,jdbcType=DECIMAL},
      </if>
      <if test="fioSequentialReadIops != null" >
        #{fioSequentialReadIops,jdbcType=DECIMAL},
      </if>
      <if test="fioRandomWriteIops != null" >
        #{fioRandomWriteIops,jdbcType=DECIMAL},
      </if>
      <if test="fioRandomReadIops != null" >
        #{fioRandomReadIops,jdbcType=DECIMAL},
      </if>
      <if test="unixbenchIndex != null" >
        #{unixbenchIndex,jdbcType=DECIMAL},
      </if>
      <if test="sysbenchOltp != null" >
        #{sysbenchOltp,jdbcType=DECIMAL},
      </if>
      <if test="ycsbThroughputA != null" >
        #{ycsbThroughputA,jdbcType=DECIMAL},
      </if>
      <if test="ycsbThroughputB != null" >
        #{ycsbThroughputB,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.cloudinsight.model.FlatTableExample" resultType="java.lang.Integer" >
    select count(*) from FlatTable
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update FlatTable
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=DATE},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.specification != null" >
        specification = #{record.specification,jdbcType=VARCHAR},
      </if>
      <if test="record.coremark != null" >
        coremark = #{record.coremark,jdbcType=DECIMAL},
      </if>
      <if test="record.scimark1Composite != null" >
        scimark_1_composite = #{record.scimark1Composite,jdbcType=DECIMAL},
      </if>
      <if test="record.scimark2Composite != null" >
        scimark_2_composite = #{record.scimark2Composite,jdbcType=DECIMAL},
      </if>
      <if test="record.scimark3Composite != null" >
        scimark_3_composite = #{record.scimark3Composite,jdbcType=DECIMAL},
      </if>
      <if test="record.scimark4Composite != null" >
        scimark_4_composite = #{record.scimark4Composite,jdbcType=DECIMAL},
      </if>
      <if test="record.hpccRandom100 != null" >
        hpcc_random100 = #{record.hpccRandom100,jdbcType=DECIMAL},
      </if>
      <if test="record.hpccCopy != null" >
        hpcc_copy = #{record.hpccCopy,jdbcType=DECIMAL},
      </if>
      <if test="record.hpccScale != null" >
        hpcc_scale = #{record.hpccScale,jdbcType=DECIMAL},
      </if>
      <if test="record.hpccAdd != null" >
        hpcc_add = #{record.hpccAdd,jdbcType=DECIMAL},
      </if>
      <if test="record.hpccTriad != null" >
        hpcc_triad = #{record.hpccTriad,jdbcType=DECIMAL},
      </if>
      <if test="record.pingMin != null" >
        ping_min = #{record.pingMin,jdbcType=DECIMAL},
      </if>
      <if test="record.pingAverage != null" >
        ping_average = #{record.pingAverage,jdbcType=DECIMAL},
      </if>
      <if test="record.pingMax != null" >
        ping_max = #{record.pingMax,jdbcType=DECIMAL},
      </if>
      <if test="record.pingStd != null" >
        ping_std = #{record.pingStd,jdbcType=DECIMAL},
      </if>
      <if test="record.iperfInternal != null" >
        iperf_internal = #{record.iperfInternal,jdbcType=DECIMAL},
      </if>
      <if test="record.iperfExternal != null" >
        iperf_external = #{record.iperfExternal,jdbcType=DECIMAL},
      </if>
      <if test="record.netperfTcpRrInternal != null" >
        netperf_tcp_rr_internal = #{record.netperfTcpRrInternal,jdbcType=DECIMAL},
      </if>
      <if test="record.netperfTcpCrrInternal != null" >
        netperf_tcp_crr_internal = #{record.netperfTcpCrrInternal,jdbcType=DECIMAL},
      </if>
      <if test="record.netperfTcpStreamInternal != null" >
        netperf_tcp_stream_internal = #{record.netperfTcpStreamInternal,jdbcType=DECIMAL},
      </if>
      <if test="record.netperfUdpRrInternal != null" >
        netperf_udp_rr_internal = #{record.netperfUdpRrInternal,jdbcType=DECIMAL},
      </if>
      <if test="record.fioSequentialWriteBandwidth != null" >
        fio_sequential_write_bandwidth = #{record.fioSequentialWriteBandwidth,jdbcType=DECIMAL},
      </if>
      <if test="record.fioSequentialReadBandwidth != null" >
        fio_sequential_read_bandwidth = #{record.fioSequentialReadBandwidth,jdbcType=DECIMAL},
      </if>
      <if test="record.fioRandomWriteBandwidth != null" >
        fio_random_write_bandwidth = #{record.fioRandomWriteBandwidth,jdbcType=DECIMAL},
      </if>
      <if test="record.fioRandomReadBandwidth != null" >
        fio_random_read_bandwidth = #{record.fioRandomReadBandwidth,jdbcType=DECIMAL},
      </if>
      <if test="record.fioSequentialWriteLatency != null" >
        fio_sequential_write_latency = #{record.fioSequentialWriteLatency,jdbcType=DECIMAL},
      </if>
      <if test="record.fioSequentialReadLatency != null" >
        fio_sequential_read_latency = #{record.fioSequentialReadLatency,jdbcType=DECIMAL},
      </if>
      <if test="record.fioRandomWriteLatency != null" >
        fio_random_write_latency = #{record.fioRandomWriteLatency,jdbcType=DECIMAL},
      </if>
      <if test="record.fioRandomReadLatency != null" >
        fio_random_read_latency = #{record.fioRandomReadLatency,jdbcType=DECIMAL},
      </if>
      <if test="record.fioSequentialWriteIops != null" >
        fio_sequential_write_iops = #{record.fioSequentialWriteIops,jdbcType=DECIMAL},
      </if>
      <if test="record.fioSequentialReadIops != null" >
        fio_sequential_read_iops = #{record.fioSequentialReadIops,jdbcType=DECIMAL},
      </if>
      <if test="record.fioRandomWriteIops != null" >
        fio_random_write_iops = #{record.fioRandomWriteIops,jdbcType=DECIMAL},
      </if>
      <if test="record.fioRandomReadIops != null" >
        fio_random_read_iops = #{record.fioRandomReadIops,jdbcType=DECIMAL},
      </if>
      <if test="record.unixbenchIndex != null" >
        unixbench_index = #{record.unixbenchIndex,jdbcType=DECIMAL},
      </if>
      <if test="record.sysbenchOltp != null" >
        sysbench_oltp = #{record.sysbenchOltp,jdbcType=DECIMAL},
      </if>
      <if test="record.ycsbThroughputA != null" >
        ycsb_throughput_a = #{record.ycsbThroughputA,jdbcType=DECIMAL},
      </if>
      <if test="record.ycsbThroughputB != null" >
        ycsb_throughput_b = #{record.ycsbThroughputB,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update FlatTable
    set id = #{record.id,jdbcType=INTEGER},
      time = #{record.time,jdbcType=DATE},
      name = #{record.name,jdbcType=VARCHAR},
      specification = #{record.specification,jdbcType=VARCHAR},
      coremark = #{record.coremark,jdbcType=DECIMAL},
      scimark_1_composite = #{record.scimark1Composite,jdbcType=DECIMAL},
      scimark_2_composite = #{record.scimark2Composite,jdbcType=DECIMAL},
      scimark_3_composite = #{record.scimark3Composite,jdbcType=DECIMAL},
      scimark_4_composite = #{record.scimark4Composite,jdbcType=DECIMAL},
      hpcc_random100 = #{record.hpccRandom100,jdbcType=DECIMAL},
      hpcc_copy = #{record.hpccCopy,jdbcType=DECIMAL},
      hpcc_scale = #{record.hpccScale,jdbcType=DECIMAL},
      hpcc_add = #{record.hpccAdd,jdbcType=DECIMAL},
      hpcc_triad = #{record.hpccTriad,jdbcType=DECIMAL},
      ping_min = #{record.pingMin,jdbcType=DECIMAL},
      ping_average = #{record.pingAverage,jdbcType=DECIMAL},
      ping_max = #{record.pingMax,jdbcType=DECIMAL},
      ping_std = #{record.pingStd,jdbcType=DECIMAL},
      iperf_internal = #{record.iperfInternal,jdbcType=DECIMAL},
      iperf_external = #{record.iperfExternal,jdbcType=DECIMAL},
      netperf_tcp_rr_internal = #{record.netperfTcpRrInternal,jdbcType=DECIMAL},
      netperf_tcp_crr_internal = #{record.netperfTcpCrrInternal,jdbcType=DECIMAL},
      netperf_tcp_stream_internal = #{record.netperfTcpStreamInternal,jdbcType=DECIMAL},
      netperf_udp_rr_internal = #{record.netperfUdpRrInternal,jdbcType=DECIMAL},
      fio_sequential_write_bandwidth = #{record.fioSequentialWriteBandwidth,jdbcType=DECIMAL},
      fio_sequential_read_bandwidth = #{record.fioSequentialReadBandwidth,jdbcType=DECIMAL},
      fio_random_write_bandwidth = #{record.fioRandomWriteBandwidth,jdbcType=DECIMAL},
      fio_random_read_bandwidth = #{record.fioRandomReadBandwidth,jdbcType=DECIMAL},
      fio_sequential_write_latency = #{record.fioSequentialWriteLatency,jdbcType=DECIMAL},
      fio_sequential_read_latency = #{record.fioSequentialReadLatency,jdbcType=DECIMAL},
      fio_random_write_latency = #{record.fioRandomWriteLatency,jdbcType=DECIMAL},
      fio_random_read_latency = #{record.fioRandomReadLatency,jdbcType=DECIMAL},
      fio_sequential_write_iops = #{record.fioSequentialWriteIops,jdbcType=DECIMAL},
      fio_sequential_read_iops = #{record.fioSequentialReadIops,jdbcType=DECIMAL},
      fio_random_write_iops = #{record.fioRandomWriteIops,jdbcType=DECIMAL},
      fio_random_read_iops = #{record.fioRandomReadIops,jdbcType=DECIMAL},
      unixbench_index = #{record.unixbenchIndex,jdbcType=DECIMAL},
      sysbench_oltp = #{record.sysbenchOltp,jdbcType=DECIMAL},
      ycsb_throughput_a = #{record.ycsbThroughputA,jdbcType=DECIMAL},
      ycsb_throughput_b = #{record.ycsbThroughputB,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.cloudinsight.model.FlatTable" >
    update FlatTable
    <set >
      <if test="time != null" >
        time = #{time,jdbcType=DATE},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="specification != null" >
        specification = #{specification,jdbcType=VARCHAR},
      </if>
      <if test="coremark != null" >
        coremark = #{coremark,jdbcType=DECIMAL},
      </if>
      <if test="scimark1Composite != null" >
        scimark_1_composite = #{scimark1Composite,jdbcType=DECIMAL},
      </if>
      <if test="scimark2Composite != null" >
        scimark_2_composite = #{scimark2Composite,jdbcType=DECIMAL},
      </if>
      <if test="scimark3Composite != null" >
        scimark_3_composite = #{scimark3Composite,jdbcType=DECIMAL},
      </if>
      <if test="scimark4Composite != null" >
        scimark_4_composite = #{scimark4Composite,jdbcType=DECIMAL},
      </if>
      <if test="hpccRandom100 != null" >
        hpcc_random100 = #{hpccRandom100,jdbcType=DECIMAL},
      </if>
      <if test="hpccCopy != null" >
        hpcc_copy = #{hpccCopy,jdbcType=DECIMAL},
      </if>
      <if test="hpccScale != null" >
        hpcc_scale = #{hpccScale,jdbcType=DECIMAL},
      </if>
      <if test="hpccAdd != null" >
        hpcc_add = #{hpccAdd,jdbcType=DECIMAL},
      </if>
      <if test="hpccTriad != null" >
        hpcc_triad = #{hpccTriad,jdbcType=DECIMAL},
      </if>
      <if test="pingMin != null" >
        ping_min = #{pingMin,jdbcType=DECIMAL},
      </if>
      <if test="pingAverage != null" >
        ping_average = #{pingAverage,jdbcType=DECIMAL},
      </if>
      <if test="pingMax != null" >
        ping_max = #{pingMax,jdbcType=DECIMAL},
      </if>
      <if test="pingStd != null" >
        ping_std = #{pingStd,jdbcType=DECIMAL},
      </if>
      <if test="iperfInternal != null" >
        iperf_internal = #{iperfInternal,jdbcType=DECIMAL},
      </if>
      <if test="iperfExternal != null" >
        iperf_external = #{iperfExternal,jdbcType=DECIMAL},
      </if>
      <if test="netperfTcpRrInternal != null" >
        netperf_tcp_rr_internal = #{netperfTcpRrInternal,jdbcType=DECIMAL},
      </if>
      <if test="netperfTcpCrrInternal != null" >
        netperf_tcp_crr_internal = #{netperfTcpCrrInternal,jdbcType=DECIMAL},
      </if>
      <if test="netperfTcpStreamInternal != null" >
        netperf_tcp_stream_internal = #{netperfTcpStreamInternal,jdbcType=DECIMAL},
      </if>
      <if test="netperfUdpRrInternal != null" >
        netperf_udp_rr_internal = #{netperfUdpRrInternal,jdbcType=DECIMAL},
      </if>
      <if test="fioSequentialWriteBandwidth != null" >
        fio_sequential_write_bandwidth = #{fioSequentialWriteBandwidth,jdbcType=DECIMAL},
      </if>
      <if test="fioSequentialReadBandwidth != null" >
        fio_sequential_read_bandwidth = #{fioSequentialReadBandwidth,jdbcType=DECIMAL},
      </if>
      <if test="fioRandomWriteBandwidth != null" >
        fio_random_write_bandwidth = #{fioRandomWriteBandwidth,jdbcType=DECIMAL},
      </if>
      <if test="fioRandomReadBandwidth != null" >
        fio_random_read_bandwidth = #{fioRandomReadBandwidth,jdbcType=DECIMAL},
      </if>
      <if test="fioSequentialWriteLatency != null" >
        fio_sequential_write_latency = #{fioSequentialWriteLatency,jdbcType=DECIMAL},
      </if>
      <if test="fioSequentialReadLatency != null" >
        fio_sequential_read_latency = #{fioSequentialReadLatency,jdbcType=DECIMAL},
      </if>
      <if test="fioRandomWriteLatency != null" >
        fio_random_write_latency = #{fioRandomWriteLatency,jdbcType=DECIMAL},
      </if>
      <if test="fioRandomReadLatency != null" >
        fio_random_read_latency = #{fioRandomReadLatency,jdbcType=DECIMAL},
      </if>
      <if test="fioSequentialWriteIops != null" >
        fio_sequential_write_iops = #{fioSequentialWriteIops,jdbcType=DECIMAL},
      </if>
      <if test="fioSequentialReadIops != null" >
        fio_sequential_read_iops = #{fioSequentialReadIops,jdbcType=DECIMAL},
      </if>
      <if test="fioRandomWriteIops != null" >
        fio_random_write_iops = #{fioRandomWriteIops,jdbcType=DECIMAL},
      </if>
      <if test="fioRandomReadIops != null" >
        fio_random_read_iops = #{fioRandomReadIops,jdbcType=DECIMAL},
      </if>
      <if test="unixbenchIndex != null" >
        unixbench_index = #{unixbenchIndex,jdbcType=DECIMAL},
      </if>
      <if test="sysbenchOltp != null" >
        sysbench_oltp = #{sysbenchOltp,jdbcType=DECIMAL},
      </if>
      <if test="ycsbThroughputA != null" >
        ycsb_throughput_a = #{ycsbThroughputA,jdbcType=DECIMAL},
      </if>
      <if test="ycsbThroughputB != null" >
        ycsb_throughput_b = #{ycsbThroughputB,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.cloudinsight.model.FlatTable" >
    update FlatTable
    set time = #{time,jdbcType=DATE},
      name = #{name,jdbcType=VARCHAR},
      specification = #{specification,jdbcType=VARCHAR},
      coremark = #{coremark,jdbcType=DECIMAL},
      scimark_1_composite = #{scimark1Composite,jdbcType=DECIMAL},
      scimark_2_composite = #{scimark2Composite,jdbcType=DECIMAL},
      scimark_3_composite = #{scimark3Composite,jdbcType=DECIMAL},
      scimark_4_composite = #{scimark4Composite,jdbcType=DECIMAL},
      hpcc_random100 = #{hpccRandom100,jdbcType=DECIMAL},
      hpcc_copy = #{hpccCopy,jdbcType=DECIMAL},
      hpcc_scale = #{hpccScale,jdbcType=DECIMAL},
      hpcc_add = #{hpccAdd,jdbcType=DECIMAL},
      hpcc_triad = #{hpccTriad,jdbcType=DECIMAL},
      ping_min = #{pingMin,jdbcType=DECIMAL},
      ping_average = #{pingAverage,jdbcType=DECIMAL},
      ping_max = #{pingMax,jdbcType=DECIMAL},
      ping_std = #{pingStd,jdbcType=DECIMAL},
      iperf_internal = #{iperfInternal,jdbcType=DECIMAL},
      iperf_external = #{iperfExternal,jdbcType=DECIMAL},
      netperf_tcp_rr_internal = #{netperfTcpRrInternal,jdbcType=DECIMAL},
      netperf_tcp_crr_internal = #{netperfTcpCrrInternal,jdbcType=DECIMAL},
      netperf_tcp_stream_internal = #{netperfTcpStreamInternal,jdbcType=DECIMAL},
      netperf_udp_rr_internal = #{netperfUdpRrInternal,jdbcType=DECIMAL},
      fio_sequential_write_bandwidth = #{fioSequentialWriteBandwidth,jdbcType=DECIMAL},
      fio_sequential_read_bandwidth = #{fioSequentialReadBandwidth,jdbcType=DECIMAL},
      fio_random_write_bandwidth = #{fioRandomWriteBandwidth,jdbcType=DECIMAL},
      fio_random_read_bandwidth = #{fioRandomReadBandwidth,jdbcType=DECIMAL},
      fio_sequential_write_latency = #{fioSequentialWriteLatency,jdbcType=DECIMAL},
      fio_sequential_read_latency = #{fioSequentialReadLatency,jdbcType=DECIMAL},
      fio_random_write_latency = #{fioRandomWriteLatency,jdbcType=DECIMAL},
      fio_random_read_latency = #{fioRandomReadLatency,jdbcType=DECIMAL},
      fio_sequential_write_iops = #{fioSequentialWriteIops,jdbcType=DECIMAL},
      fio_sequential_read_iops = #{fioSequentialReadIops,jdbcType=DECIMAL},
      fio_random_write_iops = #{fioRandomWriteIops,jdbcType=DECIMAL},
      fio_random_read_iops = #{fioRandomReadIops,jdbcType=DECIMAL},
      unixbench_index = #{unixbenchIndex,jdbcType=DECIMAL},
      sysbench_oltp = #{sysbenchOltp,jdbcType=DECIMAL},
      ycsb_throughput_a = #{ycsbThroughputA,jdbcType=DECIMAL},
      ycsb_throughput_b = #{ycsbThroughputB,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getSpecificItemsByColumn" resultType="java.math.BigDecimal" parameterType="map" >
    <foreach collection="cols" item="item"  separator="union">
	    (select
	   		${item}
	    from FlatTable
	    <if test="_parameter != null" >
	      <include refid="Update_By_Example_Where_Clause" />
	    </if>
	    <if test="example.orderByClause != null" >
	      order by ${example.orderByClause}
	    </if>)
    </foreach>
  </select>
</mapper>