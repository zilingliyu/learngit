<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-4.0.xsd 
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- 	若要使得事物生效，必须考虑spring mvc 与 spring context的父子容器关系 -->
	<context:component-scan base-package="cn.com.ctbri.cloudinsight"> 
  		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" /> 
	</context:component-scan> 
	
<!-- 	<import resource="ApplicationContext-log.xml"/>
	<import resource="ApplicationContext-security.xml"/> -->
	<!-- jdbc.properties文件路径 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:/jdbc.properties" />
	</bean>

	<!-- 数据源的配置 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driver1}" />
		<property name="url" value="${url1}" />
		<property name="username" value="${user1}" />
		<property name="password" value="${password1}" />
		<!-- data source configuration -->
		<property name="initialSize" value="10" /><!-- initial connections -->
		<property name="maxActive" value="20" /><!-- MAX connections -->
		<property name="maxIdle" value="20" /><!-- MAX idle connections -->
		<property name="minIdle" value="10" /><!-- MIN idle connections -->
		<!-- 处理mysql 8小时自动断开连接的问题 -->
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="validationQuery" value="select 1" />
		<property name="timeBetweenEvictionRunsMillis" value="20000" />
		<property name="numTestsPerEvictionRun" value="100" />
	</bean>

	<!--====事务相关控制== -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:advice id="userTxAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 没有配置只读 -->
			<tx:method name="validate" propagation="REQUIRED"
				read-only="true" rollback-for="java.lang.Exception" />
			<tx:method name="*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="pc"
			expression="execution(* cn.com.ctbri.cloudinsight.service..*.*(..))" />
		<!-- 把事务控制在Business层 -->
		<aop:advisor pointcut-ref="pc" advice-ref="userTxAdvice" />
	</aop:config>

	<!-- MyBatis sqlSessionFactory 配置 mybatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 该属性用来指定MyBatis的XML配置文件路径,跟Spring整合时，编写MyBatis映射文件的目的无非是配置一下typeAlias、setting之类的 
			元素。不用在其中指定数据源，或者事务处理方式。就算配置了也会被忽略。因为这些都是使用Spring中的配置 。当然如果你不打算添加typeAlias 
			之类的设置的话，你连MyBatis的配置文件都不用写，更不用配置这个属性了 -->
		<!--<property name="configLocation" value="classpath:/SqlMapConfig.xml" 
			/> -->
		<!-- 该配置文件用来指定Mapper映射文件的位置 ，如果映射文件与相应的接口同名，且在同一路径下，那么可以不配置该选项,也可以在MybatisConfig.xml文件里配置mapper -->
		<!--<property name="mapperLocations" value="src/UserMapper.xml"/> -->
		<!-- 要映射类的包路径，如果使用了这种方式，则configLocation中不必再进行声明 <property name="typeAliasesPackage" 
			value="${mybatis.alias.basepackage}" /> -->
	</bean>

	<bean id="flatTableMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="cn.com.ctbri.cloudinsight.dao.FlatTableMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<bean id="ciUserMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="cn.com.ctbri.cloudinsight.dao.CIUserMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

</beans>
